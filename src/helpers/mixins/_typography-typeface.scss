//
//   Typography – Typefaces
//   Import the declared typefaces along all his weights
//
//   @param {string} $font-family - The font family name
//   @param {list} $typefaces - A list of all the weight to declare.
//
@mixin typography-typefaces($font-family, $typefaces)
{
  $google: ();
  $typekit: ();

  @each $weight, $provider in $typefaces
  {
    @if $provider == $font-google
    {
      $google: append($google, $weight, comma);
    }
    @else if $provider == $font-typekit
    {
      $typekit: append($typekit, $weight, comma);
    }
    @else
    {
      @include typography-local-typeface($font-family, $provider, $weight);
    }
  }

  @if length($google) > 1
  {
    @include typography-google-typeface($font-family, $google);
  }

  @if length($typekit) > 1
  {
    @warn "@TODO: Import typekit font";
    // @include typography-typekit-typeface($font-family, $typefaces);
  }
}

//
//   Typeface – Declare a local font-face
//
//   @param {string} $font-family - The font family name
//   @param {list} $typefaces - A list of all the weight to declare.
//
@mixin typography-local-typeface($font-family, $provider, $weight)
{
  @font-face
  {
    font-family: $font-family;
    font-weight: $weight;
    // font-style: $style;

    src: font-local-path($font-family, $provider);
  }
}


//
//   Typeface - Declare a Google typeface
//
//   @param {string} $font-family - The font family name
//   @param {list} $weights - A list of all the weight to declare.
//
@mixin typography-google-typeface($font-family, $weights)
{
  $w: to-string($weights, ',');
  $url: "https://fonts.googleapis.com/css?family=#{$font-family}:#{$w}";
  @import url($url);
}
