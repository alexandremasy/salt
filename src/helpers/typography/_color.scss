//
//   Typography - Color
//
////////////////////////////////////////////////////////////////////////////////
//
//   Global value
//
////////////////////////////////////////////////////////////////////////////////
//
$color: null;
//
////////////////////////////////////////////////////////////////////////////////
//
//   Definition
//
////////////////////////////////////////////////////////////////////////////////
//
$salt-color: (
  //
  //   Responsive ?
  //
  is-responsive:           true,

  //
  //   Domain
  //
  domain:                  'co',

  //
  //   Property
  //
  property:                'color',

  //
  //   Values
  //
  values: (
    transparent:           transparent,
    none:                  none
  )
) !default;
//
////////////////////////////////////////////////////////////////////////////////
//
//   Commit properties
//   (Re-)generate the property definition based on the dynamic values
//   (settings).
//
//   @return {Map} Return the new property defition.
//
////////////////////////////////////////////////////////////////////////////////
//
@function color-commit-properties()
{
  $list: ();

  @each $pname, $palette in $color-palettes
  {
    @each $cname, $color in $palette
    {
      $key: $pname + '-' + $cname;
      $list: map-set($list, $key, $color);
    }
  }

  @debug $list;

  $values: (
    values: map-merge($list, map-get($salt-color, values))
  );
  $color: map-merge($salt-color, $values) !global;

  @return $color;
}
//
////////////////////////////////////////////////////////////////////////////////
//
//   Helper generator
//   Generate the property helper
//
////////////////////////////////////////////////////////////////////////////////
@mixin color-helper-generator()
{
  @if $color == null
  {
    $p: call(color-commit-properties);
  }
  @include helper-factory-iterator($color);
}
//
////////////////////////////////////////////////////////////////////////////////
//
//   Mixin
//
//   @param {String} $value
//   @param {String} $breakpoint
//
//   @author Alexandre Masy
//   @version 1.0
//   @group css-mixin
//
//   @example SCSS â€“ Usage
//     @include color(transparent);     => color: transparent;
//     @include color(<palettecolor>);  => color: <palettecolor>;
//
//   @see https://developer.mozilla.org/en/docs/Web/CSS/color
//
////////////////////////////////////////////////////////////////////////////////
//
@mixin color($value, $breakpoint: null)
{
  @if $color == null
  {
    $p: call(color-commit-properties);
  }
  @include helper-factory-mixin($color, $value, $breakpoint);
}
