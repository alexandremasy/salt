//
//   Typography - Line Height
//
////////////////////////////////////////////////////////////////////////////////
//
//   Global value
//
////////////////////////////////////////////////////////////////////////////////
//
$line-height: null;
//
////////////////////////////////////////////////////////////////////////////////
//
//   Definition
//
////////////////////////////////////////////////////////////////////////////////
//
$salt-line-height: (
  //
  //   Responsive ?
  //
  is-responsive:           true,

  //
  //   Domain
  //
  domain:                  'lh',

  //
  //   Property
  //
  property:                'line-height',

  //
  //   Values
  //
  values: (
    normal:                normal
  )
) !default;
//
////////////////////////////////////////////////////////////////////////////////
//
//   Commit properties
//   (Re-)generate the property definition based on the dynamic values
//   (settings).
//
//   @return {Map} Return the new property defition.
//
////////////////////////////////////////////////////////////////////////////////
//
@function line-height-commit-properties()
{
  // @TODO Merge the dataset from the font variable

  $line-height: $salt-line-height !global;

  @return $line-height;
}
//
////////////////////////////////////////////////////////////////////////////////
//
//   Helper generator
//   Generate the property helper
//
////////////////////////////////////////////////////////////////////////////////
@mixin line-height-helper-generator()
{
  @if $line-height == null
  {
    $p: call(line-height-commit-properties);
  }
  @include helper-factory-iterator($line-height);
}
//
////////////////////////////////////////////////////////////////////////////////
//
//   Mixin
//
//   @param {String} $value
//   @param {String} $breakpoint
//
//   @author Alexandre Masy
//   @version 1.0
//   @group css-mixin
//
//   @example SCSS â€“ Usage
//     @include line-height(normal);     => line-height: normal;
//     @include line-height(xxs);        => line-height: <xxs>;
//
//   @see https://developer.mozilla.org/en/docs/Web/CSS/line-height
//
////////////////////////////////////////////////////////////////////////////////
//
@mixin line-height($value, $breakpoint: null)
{
  @if $line-height == null
  {
    $p: call(line-height-commit-properties);
  }
  @include helper-factory-mixin($line-height, $value, $breakpoint);
}
