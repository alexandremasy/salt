////////////////////////////////////////////////////
//
//              Grid generation
//
////////////////////////////////////////////////////

@if $mode == "dsm" {
} @else {
  [class*="col-"] {
    flex: 0 0 auto;
    padding-right: $g-half-gutter;
    padding-left: $g-half-gutter;
  }

  .container,
  .container-small,
  .container-fluid {
    @extend .mx-auto;
  }

  .container {
    padding-left: calc(
      (100vw - #{$g-count - 1} * #{$g-half-gutter}) /
        #{$g-count} +
        #{$g-half-gutter}
    );
    padding-right: calc(
      (100vw - #{$g-count - 1} * #{$g-half-gutter}) /
        #{$g-count} +
        #{$g-half-gutter}
    );

    max-width: map-get($g-breakpoints, "xxl");

    @include media(">m") {
      padding-left: calc(
        (100vw - #{$g-count - 1} * #{$g-gutter}) / #{$g-count} + #{$g-gutter}
      );
      padding-right: calc(
        (100vw - #{$g-count - 1} * #{$g-gutter}) / #{$g-count} + #{$g-gutter}
      );
    }

    @include media(">xxl") {
      padding-left: calc(
        (#{map-get($g-breakpoints, "xxl")} - #{$g-count - 1} * #{$g-gutter}) / #{$g-count} +
          #{$g-gutter}
      );
      padding-right: calc(
        (#{map-get($g-breakpoints, "xxl")} - #{$g-count - 1} * #{$g-gutter}) / #{$g-count} +
          #{$g-gutter}
      );
    }
  }

  .container-small {
    padding-left: calc(
      (100vw - #{$g-count - 1} * #{$g-half-gutter}) /
        #{$g-count} +
        #{$g-half-gutter}
    );
    padding-right: calc(
      (100vw - #{$g-count - 1} * #{$g-half-gutter}) /
        #{$g-count} +
        #{$g-half-gutter}
    );
    max-width: 52rem;
  }

  .row {
    @include b-flex;
    @include b-flex(wrap);
    @include b-flex(row);
    flex: 0 1 auto;

    margin-right: $g-compensation;
    margin-left: $g-compensation;
  }

  // col-[1-14]
  @for $i from 1 through $g-count {
    .col-#{$i} {
      flex-basis: calc(100% / #{$g-count} * #{$i});
      max-width: calc(100% / #{$g-count} * #{$i});
    }
  }

  // col-[xxs-xxl]-[1-14]
  @each $breakpoint, $size in $g-breakpoints {
    @for $i from 1 through $g-count {
      .col-#{$breakpoint}-#{$i} {
        @include media(">#{$breakpoint}") {
          flex-basis: calc(100% / #{$g-count} * #{$i});
          max-width: calc(100% / #{$g-count} * #{$i});
        }
      }
    }
  }
}
