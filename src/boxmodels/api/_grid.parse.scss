//
//   Unit expression parser
//   Parse an expression composed of an operator and a grid breakpoint
//   Return the value of the breakpoint altered by the unit interval
//
//   @param {String} $expression   The expression to parse
//   @return {Number}
//
//   @example scss
//     grid-parse('m')  => 48em
//     grid-parse('=m') => 48em
//     grid-parse('>m') => 48.01em
//     grid-parse('<m') => 47.99em
//
//   @author Alexandre Masy
//
@function grid-parse($expression)
{
  $ret: null;
  $operator: grid-parse-operator($expression);
  $breakpoint: grid-parse-breakpoint($expression, $operator);

  // if no operator than give back the value of the expression
  // it is the equivalent of a equal operation
  @if $operator == null
  {
    $operator: '=';
  }

  @if $breakpoint == null
  {
    $breakpoint: 0;
    $interval: 0;
    @return null;
  }

  $interval: map-get($g-intervals, unit($breakpoint));

  @if index(($equal, $less-or-equal, $more-or-equal), $operator)
  {
    $ret: $breakpoint;
  }
  @else if index(($less), $operator)
  {
    $ret: $breakpoint - $interval;
  }
  @else if index(($more), $operator)
  {
    $ret: $breakpoint + $interval;
  }

  @return $ret;
}
