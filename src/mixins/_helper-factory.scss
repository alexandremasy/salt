//
//   Helper Factory
//   This is here, in the wonderful industry that all the helper are created!
//   Enjoy your journey through a wonderland of loops.
//
@mixin helper-factory
{
  // Typography
  // @TODO join the color palette before generating the color helper
  @include helper-factory-iterator($color, $color-domain, color);
  // @include helper-factory-iterator($font-size, $font-size-domain, font-size);
  @include helper-factory-iterator(map-merge($letter-spacing, $font-letter-spacing), $letter-spacing-domain, letter-spacing);
  @include helper-factory-iterator($text-decoration, $text-decoration-domain, text-decoration);
  @include helper-factory-iterator($text-transform, $text-transform-domain, text-transform);
  @include helper-factory-iterator($word-break, $word-break-domain, word-break);
}

//
//   Helper Factory – Iterator
//   Iterate over the given list to generate the appropriate helper
//
//   @param {List,Map} $list – The list to iterate on
//   @param {String} $domain – The domain used for the helper
//   @param {String} $property - The property for which the helper is generated
//
@mixin helper-factory-iterator($list, $domain, $property)
{
  $prefix: helper-prefix();

  @if $prefix != null
  {
    @if type-of($list) == 'list'
    {
      @each $item in $list
      {
        $c: $prefix + $item;
        @include helper-factory-helper($c, $property, $item);
      }
    }

    @if type-of($list) == 'map'
    {
      @each $key, $value in $list
      {
        $c: $prefix + $key;
        @include helper-factory-helper($c, $property, $value);
      }
    }
  }
}

@mixin helper-factory-helper($class, $property, $value)
{
  #{$class}
  {
    #{$property}: $value;
  }
}
